intl <- read.csv("intl.csv")
str(intl)
View(intl)
ggplot(intl) + geom_bar(aes(Region, PercenOfIntl))
attach(intl)
ggplot(intl) + geom_bar(aes(Region, PercentOfIntl))
ggplot(intl) + geom_bar(aes(x=PercentOfIntl))
?geom_bar
ggplot(intl) + geom_bar(aes(x=Region, y=PercentOfIntl), stat = "identity")
ggplot(intl) + geom_col(aes(x=Region, y=PercentOfIntl))
ggplot(intl) + geom_col(aes(x=Region, y=PercentOfIntl))
ggplot(intl) + geom_bar(aes(x=Region, y=PercentOfIntl), stat = "identity") + geom_text(aes(label=PercentOfIntl))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity") + geom_text(aes(label=PercentOfIntl))
intl = transform(intl, Region = reorder(Region, -PercentOfIntl))
str(intl)
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity") + geom_text(aes(label=PercentOfIntl))
intl$PercentOfIntl <- intl$PercentOfIntl*100
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity") + geom_text(aes(label=PercentOfIntl))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4)
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students")
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 0))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 0.5))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 2))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, vjust = 1))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, vjust = 0))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, ))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, vjust = -2))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, vjust = -1))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, vjust = 1))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, vjust = 2))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, vjust = 3))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, vjust = 0))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 0))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, vjust = 1))
ggplot(intl, aes(x=Region, y=PercentOfIntl)) + geom_bar(stat = "identity", fill = "darkblue") + geom_text(aes(label=PercentOfIntl), vjust = -0.4) + ylab("Percentage of International Students") + theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
library(ggmap)
install.packages(ggmap)
install.packages("ggmap")
library(ggmap)
intlall <- read.csv("intlall.csv", stringsAsFactors = FALSE)
str(intlall)
head(intlall)
intlall(is.na(intlall)) <- 0
intlall(is.na(intlall)) <- 0
intlall(is.na(intlall)) <- 0
intlall[is.na(intlall)] <- 0
head(intlall)
world_map <- map_data("world")
str(world_map)
table(world_map$group)
str(world_map)
plot(world_map)
world_map <- merge(world_map, intlall, by.x = "region", by.y = "Citizenship")
str(world_map)
ggplot(world_map, aes(x=long, y=lat, group=group) + geom_polygon(fill="white", color="black")
)
ggplot(world_map, aes(x=long, y=lat, group=group)) + geom_polygon(fill="white", color="black")
library(maps)
ggplot(world_map, aes(x=long, y=lat, group=group) + geom_polygon(fill="white", color="black") + coord_map("mercator")
)
ggplot(world_map, aes(x=long, y=lat, group=group)) + geom_polygon(fill="white", color="black") + coord_map("mercator")
ggplot(world_map, aes(x=long, y=lat, group=group)) + geom_polygon(fill="white", color="black") + coord_map("mercator")
world_map <- world_map[order(world_map$group, world_map$order),]
ggplot(world_map, aes(x=long, y=lat, group=group)) + geom_polygon(fill="white", color="black") + coord_map("mercator")
library(ggplot2)
intl = read.csv("intl.csv")
str(intl)
ggplot(intl, aes(x=Region, y=PercentOfIntl)) +
geom_bar(stat="identity") +
geom_text(aes(label=PercentOfIntl))
intl = transform(intl, Region = reorder(Region, -PercentOfIntl))
str(intl)
intl$PercentOfIntl = intl$PercentOfIntl * 100
ggplot(intl, aes(x=Region, y=PercentOfIntl)) +
geom_bar(stat="identity", fill="dark blue") +
geom_text(aes(label=PercentOfIntl), vjust=-0.4) +
ylab("Percent of International Students") +
theme(axis.title.x = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1))
library(ggmap)
intlall = read.csv("intlall.csv",stringsAsFactors=FALSE)
head(intlall)
intlall[is.na(intlall)] = 0
head(intlall)
world_map = map_data("world")
str(world_map)
world_map = merge(world_map, intlall, by.x ="region", by.y = "Citizenship")
str(world_map)
ggplot(world_map, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_map("mercator")
world_map = world_map[order(world_map$group, world_map$order),]
world_map = world_map[order(world_map$group, world_map$order),]
ggplot(world_map, aes(x=long, y=lat, group=group)) +
geom_polygon(fill="white", color="black") +
coord_map("mercator")
table(intlall$Citizenship)
intlall$Citizenship[intlall$Citizenship=="China (People's Republic Of)"] = "China"
world_map = merge(map_data("world"), intlall,
by.x ="region",
by.y = "Citizenship")
world_map = world_map[order(world_map$group, world_map$order),]
ggplot(world_map, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=Total), color="black") +
coord_map("mercator")
ggplot(world_map, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=Total), color="black") +
coord_map("ortho", orientation=c(20, 30, 0))
ggplot(world_map, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=Total), color="black") +
coord_map("ortho", orientation=c(-37, 175, 0))
ggplot(world_map, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=Total), color="black") +
coord_map("mercator")
install.packages("reshape2")
install.packages("reshape2")
library("reshape2")
households <- read.csv("households.csv")
households <- read.csv("households.csv")
str(households)
head(households)
households[,1:2]
head(melt(households, id="Year"))
melt(households, id="Year")
?melt
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line()
library(ggplot2)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=5) + ylab('Percentage of Households')
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households')
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point()
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=3)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=1)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=2)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=3)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=4)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=5)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=6)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=7)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=8)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=9)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=10)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=11)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=12)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=13)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=14)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=15)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=16)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=17)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=18)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=29)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=20)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=19)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=20)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=21)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=2) + ylab('Percentage of Households') + geom_point(size=4, shape=15)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=1) + ylab('Percentage of Households') + geom_point(size=4, shape=15)
1
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=1) + ylab('Percentage of Households') + geom_point(size=1, shape=15)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=1) + ylab('Percentage of Households') + geom_point(shape=15)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=1) + ylab('Percentage of Households') + geom_point(size=1,shape=15)
ggplot(melt(households, id="Year"), aes(x=Year, y=value, color=variable)) + geom_line(size=1) + ylab('Percentage of Households') + geom_point(size=2,shape=15)
setwd("C:/Users/qdd745/OneDrive/Documents/Data Science/Courses/The Analytics Edge/Unit 7 Data Visualization/Assignments/Election Forecasting")
knitr::opts_chunk$set(echo = TRUE, comment = NA, results = "hold", message = FALSE, warning = FALSE)
library(ggplot2)
library(maps)
library(ggmap)
statesMap <- map_data("state")
str(statesMap)
head(statesMap)
statesMap[statesMap$region=="alabama",]
statesMap[statesMap$region=="california",]
summary(statesMap$order)
statesMap[statesMap$region=="chicago",]
statesMap[statesMap$region=="illinois",]
statesMap[statesMap$region=="montana",]
statesMap[statesMap$region=="florida",]
statesMap[statesMap$region=="alabama",]
statesMap[1:20,]
statesMap[statesMap$region=="alabama",]
statesMap[203:300,]
statesMap[300:500,]
table(statesMap$group)
statesMap[statesMap$region=="florida",]
statesMap[statesMap$region=="hawai",]
statesMap[statesMap$region=="hawaii",]
statesMap[statesMap$region=="mane",]
table(statesMap$group)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black")
polling <- read.csv("PollingImputed.csv")
library(caTools)
View(polling)
polling <- read.csv("PollingImputed.csv")
Train <- subset(polling, Year < 2012)
Test <- subset(polling, year >= 2012)
Test <- subset(polling, Year >= 2012)
mod2 <- glm(Republican ~ SurveyUSA + DiffCount, data = Train, family = "binomial")
TestPrediction <- predict(mod2, newdata = Test, type = "response")
TestPredictionBinary <- as.numeric(TestPrediction > 0.5)
View(polling)
predictionDataframe <- data.frame(TestPrediction, TestPredictionBinary, Test$State)
table(predictionDataframe$TestPredictionBinary)
mean(predictionDataframe$TestPrediction)
predictionDataframe$region <- tolower(predictionDataframe$Test.State)
predictionMap <- merge(statesMap, predictionDataframe, by = "region")
predictionMap <- predictionMap[order(predictionMap$order),]
str(predictionMap)
str(statesMap)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = "white"), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = TestPredictionBinary), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = factor(TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = factor(TestPredictionBinary)))
color = "black"
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = factor(TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = factor(TestPredictionBinary)), color = "black") + scale_color_gradient(low = "blue", high = "red")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = factor(TestPredictionBinary)), color = "black") + scale_color_gradient(low = "red", high = "blue")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = factor(TestPredictionBinary)), color = "black") + scale_color_gradient(low = "blue", high = "red")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = factor(TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1))
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
?scale_fill_gradient
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "colorbar", breaks = c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "colorbar", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black")
predictionMap$TestPrediction
summary(predictionMap$TestPrediction)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "colorbar", breaks = c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "colorbar", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "grey", high = "black", guide = "colorbar", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "gray", high = "black", guide = "colorbar", name = "Prediction 2012")
legend
TestPredictionBinary
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
predictionMap[predictionMap$region=="florida",]
Test[State=="Florida","Republican"]
View(Test)
Test[State=="Florida","Republican"]
Test[1,"Republican"]
Test[Test$State == "Florida","Republican"]
Test[Test$State == "Florida","Republican"]
predictionDataframe[predictionDataframe$region == "florida",]
predictionDataframe[predictionDataframe$region == "florida","TestPredictionBinary"]
Test[Test$State == "Florida","Republican"]
predictionDataframe[predictionDataframe$region == "florida","TestPredictionBinary"]
predictionDataframe[predictionDataframe$region == "florida","TestPrediction"]
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", linetype = 2) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", size = 2) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", alpha = 0.5) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", alpha = 0.2) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", alpha = 0.3) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", alpha = 0.2) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", linetype = 3) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + coord_fixed()
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + coord_fixed(1.3)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.3)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.5)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.3)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(0)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(2)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.5)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") +
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black")
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.5)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black")
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.5)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.6)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(3)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(2)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.1)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.2)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.3)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.4)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.5)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.6)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.4)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black")
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.4)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.5)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.33)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + coord_fixed(1.33)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012") + coord_fixed(1.33)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012") + coord_fixed(1.33)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", linetype = 3) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012") + coord_fixed(1.33)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", size = 3) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012") + coord_fixed(1.33)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", alpha = 0.2) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012") + coord_fixed(1.33)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", alpha = 0.2) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012") + coord_fixed(1.4)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", alpha = 0.2) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012") + coord_fixed(1.5)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", alpha = 0.2) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012") + coord_fixed(1.1)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", alpha = 0.2) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012") + coord_fixed(1.33)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + coord_fixed(1.33)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + coord_fixed(1.33)
```{r fig.height=6, fig.width=8}
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + coord_fixed(1.33)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
```{r fig.height=4, fig.width=6}
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
knitr::opts_chunk$set(echo = TRUE, comment = NA, results = "hold", message = FALSE, warning = FALSE)
library(ggplot2)
library(maps)
library(ggmap)
statesMap <- map_data("state")
str(statesMap)
table(statesMap$group)
ggplot(statesMap, aes(x = long, y = lat, group = group)) + geom_polygon(fill = "white", color = "black") + coord_fixed(1.33)
polling <- read.csv("PollingImputed.csv")
Train <- subset(polling, Year < 2012)
Test <- subset(polling, Year >= 2012)
mod2 <- glm(Republican ~ SurveyUSA + DiffCount, data = Train, family = "binomial")
TestPrediction <- predict(mod2, newdata = Test, type = "response")
TestPredictionBinary <- as.numeric(TestPrediction > 0.5)
predictionDataframe <- data.frame(TestPrediction, TestPredictionBinary, Test$State)
table(predictionDataframe$TestPredictionBinary)
mean(predictionDataframe$TestPrediction)
predictionDataframe$region <- tolower(predictionDataframe$Test.State)
predictionMap <- merge(statesMap, predictionDataframe, by = "region")
predictionMap <- predictionMap[order(predictionMap$order),]
str(predictionMap)
str(statesMap)
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPredictionBinary)), color = "black") + scale_fill_gradient(low = "blue", high = "red", guide = "legend", breaks = c(0,1), labels = c("Democrat", "Republican"), name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black") + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
Test[Test$State == "Florida","Republican"]
predictionDataframe[predictionDataframe$region == "florida","TestPredictionBinary"]
predictionDataframe[predictionDataframe$region == "florida","TestPrediction"]
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", linetype = 3) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", size = 3) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
ggplot(predictionMap) + geom_polygon(aes(x = long, y = lat, group = group, fill = (TestPrediction)), color = "black", alpha = 0.2) + scale_fill_gradient(low = "blue", high = "red", name = "Prediction 2012")
setwd("C:/Users/qdd745/OneDrive/Documents/Data Science/Courses/The Analytics Edge/Unit 7 Data Visualization/Assignments/Visualizing Network Data")
knitr::opts_chunk$set(echo = TRUE, comment = NA, results = "hold", message = FALSE, warning = FALSE)
edges <- read.csv("edges.csv")
str(edges)
edges <- read.csv("edges.csv")
users <- read.csv("users.csv")
str(edges)
edges <- read.csv("edges.csv")
users <- read.csv("users.csv")
str(edges)
str(users)
edges <- read.csv("edges.csv")
users <- read.csv("users.csv")
str(edges)
str(users)
head(edges)
head(users)
146*2/59
is.null(users$school)
is.na(users$school)
users$school
table(users$school)
40+17+2
users$school==""
table(users[users$school != "","Locale"])
users[users$school != "","Locale"]
users[users$school != "","locale"]
table(users[users$school != "","locale"])
users[users$school != "",]
table(users$gender, users$school)
table(users$school)
table(users$gender, users$school)
install.packages("igraph")
library(igraph)
?graph.data.frame
graph.data.frame(edges)
g <- graph.data.frame(edges, directed = TRUE, vertices = users)
summary(g)
g <- graph.data.frame(edges, directed = TRUE, vertices = users)
str(g)
g <- graph.data.frame(edges, directed = TRUE, vertices = users)
g
g
g <- graph.data.frame(edges, directed = FALSE, vertices = users)
g
g <- graph.data.frame(edges, directed = FALSE, vertices = users)
plot(g)
plot(g, vertex.size=5, vertex.label=NA)
degree(g)
degree(g) >= 10
sum(degree(g) >= 10)
table(degree(g))
sum(degree(g) >= 10)
table(degree(g))
sum(degree(g) >= 10)
table(degree(g)>=10)
sum(degree(g) >= 10)
table(degree(g))
table(degree(g)>=10)
sum(degree(g) >= 10)
table(degree(g))
table(degree(g)>=10)
plot(g, vertex.size=6, vertex.label=NA)
plot(g, vertex.size=10, vertex.label=NA)
plot(g, vertex.size=3, vertex.label=NA)
plot(g, vertex.size=2, vertex.label=NA)
plot(g, vertex.size=5, vertex.label=NA)
V(g)$size = degree(g)/2 + 2
plot(g, vertex.label=NA)
18/2+2
0/2+2
V(g)$color <- "black"
V(g)$color[V(g)$gender=="A"}] <- "red"
V(g)$color <- "black"
V(g)$color[V(g)$gender=="A"] <- "red"
V(g)$color[V(g)$gender=="B"] <- "gray"
plot(g, vertex.label=NA)
table(V(g)$school)
V(g)$color[V(g)$school=="A"] = "blue"
V(g)$color[V(g)$school=="AB"] = "green"
plot(g, vertex.label=NA)
table(V(g)$locale)
V(g)$color[V(g)$school=="A"] = "orange"
V(g)$color[V(g)$school=="B"] = "yellow"
plot(g, vertex.label=NA)
V(g)$color[V(g)$school=="A"] = "gray"
V(g)$color[V(g)$school=="B"] = "red"
plot(g, vertex.label=NA)
V(g)$color[V(g)$school=="A"] = "orange"
V(g)$color[V(g)$school=="B"] = "yellow"
plot(g, vertex.label=NA)
V(g)$color="gray"
V(g)$color[V(g)$school=="A"] = "orange"
V(g)$color[V(g)$school=="B"] = "yellow"
plot(g, vertex.label=NA)
V(g)$color="gray"
V(g)$color[V(g)$school=="A"] = "orange"
V(g)$color[V(g)$school=="B"] = "red"
plot(g, vertex.label=NA)
V(g)$color="black"
V(g)$color[V(g)$school=="A"] = "red"
V(g)$color[V(g)$school=="B"] = "gray"
plot(g, vertex.label=NA)
V(g)$color <- "black"
V(g)$color[V(g)$school=="A"] = "red"
V(g)$color[V(g)$school=="AB"] = "gray"
plot(g, vertex.label=NA)
V(g)$color <- "black"
V(g)$color[V(g)$school=="A"] = "red"
V(g)$color[V(g)$school=="AB"] = "green"
plot(g, vertex.label=NA)
V(g)$color <- "black"
V(g)$color[V(g)$school=="A"] = "red"
V(g)$color[V(g)$school=="AB"] = "blue"
plot(g, vertex.label=NA)
V(g)$color <- "black"
V(g)$color[V(g)$school=="A"] = "red"
V(g)$color[V(g)$school=="AB"] = "gray"
plot(g, vertex.label=NA)
V(g)$color="white"
V(g)$color[V(g)$school=="A"] = "red"
V(g)$color[V(g)$school=="B"] = "gray"
plot(g, vertex.label=NA)
table(V(g)$locale)
V(g)$color="white"
V(g)$color[V(g)$locale=="A"] = "red"
V(g)$color[V(g)$locale=="B"] = "gray"
plot(g, vertex.label=NA)
V(g)$color="black"
V(g)$color[V(g)$locale=="A"] = "red"
V(g)$color[V(g)$locale=="B"] = "gray"
plot(g, vertex.label=NA)
?igraph.plotting
rglplot(g)
rglplot(g)
rglplot(g, vertex.label=NA)
V(g)$color="black"
V(g)$color[V(g)$locale=="A"] = "red"
V(g)$color[V(g)$locale=="B"] = "gray"
plot(g, vertex.label=NA, width=2)
V(g)$color="black"
V(g)$color[V(g)$locale=="A"] = "red"
V(g)$color[V(g)$locale=="B"] = "gray"
plot(g, vertex.label=NA, width=4)
V(g)$width=2
V(g)$color="black"
V(g)$color[V(g)$locale=="A"] = "red"
V(g)$color[V(g)$locale=="B"] = "gray"
plot(g, vertex.label=NA)
V(g)$width
V(g)$color="black"
V(g)$color[V(g)$locale=="A"] = "red"
V(g)$color[V(g)$locale=="B"] = "gray"
plot(g, vertex.label=NA, edge.width=2)
V(g)$color="black"
V(g)$color[V(g)$locale=="A"] = "red"
V(g)$color[V(g)$locale=="B"] = "gray"
plot(g, vertex.label=NA, edge.width=3)
V(g)$color="black"
V(g)$color[V(g)$locale=="A"] = "red"
V(g)$color[V(g)$locale=="B"] = "gray"
plot(g, vertex.label=NA, edge.width=2)
