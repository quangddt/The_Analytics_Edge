ggplot(data = mpg, aes(x = displ, y = hwy, size = factor(cyl))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(cyl))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, size = factor(cyl))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, shape = factor(cyl))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, alpha = factor(cyl))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, alpha = factor(class))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, alpha = class)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, color = class)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy), color = 'red') + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy), color = "blue") + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, color = "blue")) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, color = "red")) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(color = "blue")
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(color = "red")
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(color = "green")
mpg
ggplot(mpg, aes(x=audi)) + geom_bar()
ggplot(mpg, aes(x=manufacturer)) + geom_bar()
ggplot(mpg, aes(x=manufacturer, fill = model)) + geom_bar()
install.packages("reshape2")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("devtools")
g <- ggplot(mpg, aes(x = manufacturer))
g <- ggplot2(mpg, aes(x = manufacturer))
library(ggplot2)
g <- ggplot(mpg, aes(x = manufacturer))
g
g + geom_bar(aes(fill=class)) + coord_map()
mpg
g + geom_bar(aes(fill=model)) + coord_map()
g + geom_bar(aes(fill=model))
g + geom_bar(aes(fill=model)) + coord_flip()
g + geom_bar(aes(fill=model)) + coord_flip() + scale_color_brewer()
g + geom_bar(aes(fill=model)) + coord_flip() + scale_color_gradient2()
g + geom_bar(aes(fill=model), position = 'dodge') + coord_flip() + scale_color_gradient2()
library(readxl)
library(dplyr)
install.packages("dplyr")
install.packages("readxl")
library(readxl)
library(dplyr)
treemap
treemap()
WHO <- read.csv("~/OneDrive/Documents/Data Science/Courses/The Analytics Edge/WHO.csv", header=FALSE)
View(WHO)
WHO <- read.csv("~/OneDrive/Documents/Data Science/Courses/The Analytics Edge/WHO.csv")
View(WHO)
summarise(WHO)
info(WHO)
summary(WHO)
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point()
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(fill = Resion)
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(fill = Region)
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(fill = Region))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(color = Region))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(color = Country))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = Country))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = Region))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = GNI))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = WHO$PrimarySchoolEnrollmentMale + WHO$PrimarySchoolEnrollmentFemale))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate), color = "blue") + geom_point(aes(size = WHO$PrimarySchoolEnrollmentMale + WHO$PrimarySchoolEnrollmentFemale))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = WHO$PrimarySchoolEnrollmentMale + WHO$PrimarySchoolEnrollmentFemale), color = 'green')
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = WHO$PrimarySchoolEnrollmentMale + WHO$PrimarySchoolEnrollmentFemale), color = 'blue')
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = Population), color = 'blue')
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = WHO$LifeExpectancy), color = 'blue')
ggplot(WHO, aes(Country, Population)) + geom_text()
ggplot(WHO, aes(label = Population)) + geom_text()
ggplot(WHO, aes(Country, Population)) + geom_bar()
ggplot(WHO, aes(Region, Population)) + geom_bar()
ggplot(WHO, aes(x = Region)) + geom_bar(fill = Population)
ggplot(WHO, aes(x = Region)) + geom_bar()
ggplot(WHO, aes(x = Region)) + geom_bar(aes(y=Population))
ggplot(WHO, aes(x = Region)) + stat_count(Population)
ggplot(WHO, aes(Region, Population)) + geom_col()
ggplot(WHO, aes(Region, Country)) + geom_col()
ggplot(WHO, aes(Region, Country)) + geom_col()
.libPaths()
version
packageStatus()
update.packages(checkBuilt=TRUE)
y
y
packageStatus()
install.packages('tidyverse')
library('tidyverse')
mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = mpg$displ, y = mpg$hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = mpg$displ, y = mpg$hwy, color = mpg$class))
setwd("~/OneDrive/Documents/Data Science/Courses/The Analytics Edge/Assignment2/Reading Test Scores")
setwd("~/OneDrive/Documents/Data Science/Courses/The Analytics Edge/Assignment2/Detecting Flu Epidemics via Search Engine Query Data")
FluTrain <- read.csv('FluTrain.csv')
str(FluTrain)
summary(FluTrain)
FluTrain$Week[which.max(FluTrain$ILI)]
FluTrain$Week[which.max(FluTrain$Queries)]
ggplot(FluTrain) + geom_histogram(aes(ILI))
ggplot(FluTrain) + geom_histogram(aes(ILI))
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI))
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI))
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI))
knitr::opts_chunk$set(echo = TRUE, comment = NA)
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI), binwidth = 30)
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI), binwidth = 10)
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI), binwidth = 100)
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI), binwidth = 5)
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI), binwidth = 1)
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI), binwidth = 0.5)
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI))
library(ggplot2)
ggplot(FluTrain) + geom_histogram(aes(ILI), binwidth = 8/30)
ggplot(FluTrain) + geom_point(aes(Queries, log(ILI)))
FluTrend1 <- lm(log(ILI) ~ Queries, data = FluTrain)
summary(FluTrend1)
Correlation <- cor(FluTrain$Queries, FluTrain$ILI)
Correlation
Correlation^2
Correlation
Correlation^2
Correlation <- cor(FluTrain$Queries, FluTrain$ILI)
Correlation^2
log(1/Correlation)
exp(-0.5*Correlation)
Correlation <- cor(FluTrain$Queries, FluTrain$ILI)
Correlation^2
log(1/Correlation)
exp(-0.5*Correlation)
Correlation <- cor(FluTrain$ILI, FluTrain$Queries)
Correlation^2
log(1/Correlation)
exp(-0.5*Correlation)
Correlation <- cor(log(FluTrain$ILI), FluTrain$Queries)
Correlation^2
log(1/Correlation)
exp(-0.5*Correlation)
View(FluTrain)
FluTest <- read.csv('FluTest.csv')
View(FluTest)
FluTest <- read.csv('FluTest.csv')
PredTest1 = exp(predict(FluTrend1, newdata = FluTest))
PredTest1[which(FluTest$Week=='2012-03-11 - 2012-03-17')]
(FluTest$ILI-PredTest1)/FluTest$ILI
(FluTest$ILI-PredTest1)/FluTest$ILI[11]
((FluTest$ILI-PredTest1)/FluTest$ILI)[11]
RMSE <- sqrt(sum((PredTest1-FluTest$ILI)^2)/nrow(FluTest))
RMSE
install.packages('zoo')
library(zoo)
library(zoo)
ILILag2 = lag(zoo(FluTrain$ILI), -2, na.pad=TRUE)
FluTrain$ILILag2 = coredata(ILILag2)
summary(ILILag2)
ILILag2
ILILag2[1]
ILILag2[3]
ILILag2 = lag(zoo(FluTrain$ILI), -2, na.pad=TRUE)
FluTrain$ILILag2 = (ILILag2)
summary(ILILag2)
ILILag2 = lag(zoo(FluTrain$ILI), -2, na.pad=TRUE)
FluTrain$ILILag2 = coredata(ILILag2)
summary(ILILag2)
?zoo
ggplot(FluTrain) + geom_point(aes(log(ILI), log(ILILag2)))
ggplot(FluTrain) + geom_point(aes(log(ILI), log(ILILag2)))
FluTrend2 <- lm(log(ILI) ~ Queries + log(ILILag2), data = FluTrain)
summary(FluTrend2)
FluTest$ILILag2 <- lag(zoo(FluTest$ILI), -2, na.pad = TRUE)
summary(FluTest$ILILag2)
FluTest$ILILag2[1] = FluTrain$ILI[416]
FluTest$ILILag2[2] = FluTrain$ILI[417]
FluTest$ILILag2[1:2]
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
RMSE_2
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
RMSE_2
RMSE
?print
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
print('Flsf',RMSE)
RMSE
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
print(RMSE)
RMSE
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
print('q'+RMSE)
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
print('q':RMSE)
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
print('q',RMSE)
RMSE
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
print('q=',RMSE)
RMSE
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
print("q="",RMSE)
RMSE
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
print("q=",RMSE)
RMSE
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat("q=",RMSE)
RMSE
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat("q =",RMSE)
RMSE
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat("q =",RMSE\n)
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat("q =",RMSE)
RMSE
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat("RMSE =",RMSE)
RMSE
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat("RMSE =",RMSE)
cat("RMSE_2 =",RMSE_2)
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat("RMSE =",RMSE \n)
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat("RMSE =",RMSE \n 'RMSE_2 = ',RMSE_2)
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat("RMSE =,RMSE \n 'RMSE_2 = ',RMSE_2")
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
RMSE
RMSE_2
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat('RMSE = ', RMSE)
RMSE_2
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat('RMSE = \n', RMSE)
RMSE_2
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat('RMSE = ', RMSE,\n)
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat('RMSE = ', RMSE, 'quang')
RMSE_2
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat('RMSE = ', RMSE, '\n')
RMSE_2
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat('RMSE = ',RMSE,'\n','RMSE_2 = ',RMSE_2)
RMSE_2
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat('RMSE = ',RMSE,'\n','RMSE_2 = ',RMSE_2)
PredTest2 <- exp(predict(FluTrend2, newdata = FluTest))
RMSE_2 <- sqrt(sum((PredTest2-FluTest$ILI)^2)/nrow(FluTest))
cat('RMSE = ',RMSE,'\nRMSE_2 = ',RMSE_2)
?arima
unlink('Detecting_Flu_cache', recursive = TRUE)
data(state)
statedata <- cbind(data.frame(state.x77), state.abb, state.area, state.center,  state.division, state.name, state.region)
str(statedata)
summary(statedata)
library(ggplot2)
ggplot(statedata) + geom_point(aes(x,y))
tapply(statedata$HS.Grad, statedata$state.region, mean)
ggplot(statedata) + geom_boxplot(aes(state.region, Murder))
ggplot(statedata) + geom_boxplot(aes(state.region, Murder, color=state.region))
ggplot(statedata) + geom_boxplot(aes(state.region, Murder, color=state.region, fill=FALSE))
ggplot(statedata) + geom_boxplot(aes(state.region, Murder, color=state.region), fill=FALSE)
ggplot(statedata) + geom_boxplot(aes(state.region, Murder, color=state.region))
ggplot(statedata) + geom_boxplot(aes(state.region, Murder, color=state.region)) + guides(color=FALSE)
subset(statedata, state.region=='Northeast', Murder>10)
subset(statedata, state.region=='Northeast' & Murder>10)
View(statedata)
subset(statedata, state.region=='Northeast' & Murder>10)
subset(statedata, state.region=='Northeast' & Murder>10)
subset(statedata, state.region=='Northeast')['Murder']
sort(subset(statedata, state.region=='Northeast')['Murder'])
sorted(subset(statedata, state.region=='Northeast')['Murder'])
sort(subset(statedata, state.region=='Northeast')['Murder'])
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
sort(muerderInNorthEast)
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
sort(murderInNorthEast)
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
sort(murderInNorthEast['Murder'])
View(murderInNorthEast)
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
sort(murderInNorthEast[c('Murder')])
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
murderInNorthEast['Murder']
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
sort(murderInNorthEast['Murder'])
?sort
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
sort(statedata$Murder)
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
sort(statedata['Murder'])
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
sort(statedata['Murder',])
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
sort(statedata[,'Murder'])
murderInNorthEast <- subset(statedata, state.region=='Northeast')[,'Murder']
sort(statedata[,'Murder'])
murderInNorthEast <- subset(statedata, state.region=='Northeast')[,'Murder']
sort(murderInNorthEast)
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
sort(murderInNorthEast)
View(murderInNorthEast)
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
order(murderInNorthEast)
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
murderInNorthEast[order(murderInNorthEast),]
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
murderInNorthEast[order(Murder),]
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
murderInNorthEast[order(murderInNorthEast$Murder),]
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
murderInNorthEast
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
result <- murderInNorthEast[order(Muder),]
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
result <- murderInNorthEast[order(murderInNorthEast$Murder),]
result
murderInNorthEast <- subset(statedata, state.region=='Northeast')['Murder']
result <- murderInNorthEast[order(murderInNorthEast$Murder),'Murder']
result
subset(statedata, state.region=='Northeast')['Murder']
attach(statedata)
attach(statedata)
attach(statedata)
lifeReg <- lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data = statedata)
summary(lifeReg)
ggplot(statedata) + geom_point(aes(Income, Life.Exp))
lifeReg2 <- lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost, data = statedata)
summary(lifeReg2)
lifeReg3 <- lm(Life.Exp ~ Population + Income + Murder + HS.Grad + Frost, data = statedata)
summary(lifeReg2)
lifeReg3 <- lm(Life.Exp ~ Population + Income + Murder + HS.Grad + Frost, data = statedata)
summary(lifeReg3)
lifeReg2 <- lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost, data = statedata)
summary(lifeReg2)
lifeReg2 <- lm(Life.Exp ~ Population + Income + Murder + HS.Grad + Frost + Area, data = statedata)
summary(lifeReg2)
lifeReg2 <- lm(Life.Exp ~ Population + Murder + HS.Grad + Frost, data = statedata)
summary(lifeReg2)
lifeReg2 <- lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area, data = statedata)
summary(lifeReg2)
lifeReg2 <- lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost, data = statedata)
summary(lifeReg2)
lifeReg2 <- lm(Life.Exp ~ Population + Income + Murder + HS.Grad + Frost, data = statedata)
summary(lifeReg2)
lifeReg2 <- lm(Life.Exp ~ Population + Murder + HS.Grad + Frost, data = statedata)
summary(lifeReg2)
lifePredic <- predict(lifeReg2)
lifePredic <- predict(lifeReg2)
statedata$state.name[which.min(lifePredic)]
lifePredic <- predict(lifeReg2)
statedata$state.name[which.min(lifePredic)]
statedata$state.name[which.min(statedata$Life.Exp)]
lifePredic <- predict(lifeReg2)
statedata$state.name[which.min(lifePredic)]
statedata$state.name[which.min(statedata$Life.Exp)]
sort(predict(lifePredic))
sort(lifePredic)
lifePredic <- predict(lifeReg2)
statedata$state.name[which.max(lifePredic)]
statedata$state.name[which.max(statedata$Life.Exp)]
statedata$state.name[which.min(lifeReg2$residuals)]
statedata$state.name[which.max(lifeReg2$residuals)]
statedata$state.name[which.min(lifeReg2$residuals)]
statedata$state.name[which.max(lifeReg2$residuals)]
statedata$state.name[which.min(abs(lifeReg2$residuals))]
statedata$state.name[which.max(abs(lifeReg2$residuals))]
knitr::opts_chunk$set(echo = TRUE, comment = NA)
elantra <- read.csv('elantra.csv')
attach(elantra)
elantra <- read.csv('elantra.csv')
attach(elantra)
train <- subset(elantra, Year<=2012)
test <- subset(elantra, Year>2012)
elantra <- read.csv('elantra.csv')
attach(elantra)
train <- subset(elantra, Year<=2012)
test <- subset(elantra, Year>2012)
str(train)
summary(train)
saleReg <- lm(ElantraSales ~ Unemployment + CPI_all + CPI_energy + Queries)
summary(saleReg)
saleReg <- lm(ElantraSales ~ Unemployment + CPI_all + CPI_energy + Queries, data=train)
summary(saleReg)
saleReg2 <- lm(ElantraSales ~ Month + Unemployment + CPI_all + CPI_energy + Queries, data=train)
summary(saleReg2)
View(train)
110.69*2
saleReg2$coefficients
saleReg2$coefficients$Month
saleReg2$coefficients['Month']
saleReg2$coefficients['Month']*2
110.69*2
110.69*2
110.69*4
110.69*2
110.69*4
train$MonthF <- as.factor(train$Month)
test$MonthF <- as.factor(test$Month)
saleReg3 <- lm(ElantraSales ~ MonthF + Unemployment + CPI_all + CPI_energy + Queries)
train$MonthF <- as.factor(train$Month)
test$MonthF <- as.factor(test$Month)
saleReg3 <- lm(ElantraSales ~ MonthF + Unemployment + CPI_all + CPI_energy + Queries)
train$MonthF <- as.factor(train$Month)
test$MonthF <- as.factor(test$Month)
attach(train)
saleReg3 <- lm(ElantraSales ~ MonthF + Unemployment + CPI_all + CPI_energy + Queries)
summary(saleReg3)
train$MonthF <- as.factor(train$Month)
test$MonthF <- as.factor(test$Month)
attach(train)
saleReg3 <- lm(ElantraSales ~ MonthF + Unemployment + CPI_all + CPI_energy + Queries)
summary(saleReg3)
View(train)
library(corrplot)
corrplot(train, method = 'color', type = 'lower')
library(corrplot)
corrplot(train, method = 'color', type = 'lower')
library(corrplot)
corrplot(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')], method = 'color', type = 'lower')
library(corrplot)
corrplot(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')], method = 'color')
library(corrplot)
corrplot(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')])
library(corrplot)
corrplot(train[,c('Unemployment','CPI_all','CPI_energy','Queries')])
corrplot(train)
corrplot(train[,c('Unemployment','CPI_all')])
train[,c('Unemployment','CPI_all')]
a<-train[,c('Unemployment','CPI_all')]
summary(a)
corrplot(a)
library(corrplot)
corrplot(cor(train[,c('Unemployment','CPI_all','CPI_energy','Queries')]))
library(corrplot)
corrplot(cor(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')]), method = 'color')
library(corrplot)
M <- cor(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')])
corrplot(M, method = 'color', type = 'lower')
corrplot.mix(M)
library(corrplot)
M <- cor(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')])
corrplot(M, method = 'color', type = 'lower')
corrplot.mixed(M)
library(corrplot)
M <- cor(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')])
corrplot.mixed(M)
library(corrplot)
M <- cor(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')])
corrplot.mixed(M, method = 'color')
library(corrplot)
M <- cor(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')])
corrplot(M, method = 'color', type = 'lower')
library(corrplot)
M <- cor(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')])
corrplot.mixed(M, upper = 'color', lower = 'number')
library(corrplot)
M <- cor(train[,c('Month','Unemployment','CPI_all','CPI_energy','Queries')])
corrplot.mixed(M, upper = 'color', lower = 'number',order="hclust", addrect=2)
saleReg4 <- lm(ElantraSales ~ MonthF + Unemployment + CPI_all + CPI_energy)
summary(saleReg4)
SalePredict <- predict(saleReg4, test)
SSE <- sum((SalePredict-test$ElantraSales)^2)
SSE
basePredict <- mean(train$ElantraSales)
basePredict
SST <- sum((basePredict-test$ElantraSales)^2)
SST <- sum((basePredict-test$ElantraSales)^2)
1-SSE/SST
max(abs(SalePredict - test$ElantraSales))
View(test)
test[which.max(abs(SalePredict - test$ElantraSales),c('Month','Year')]
test[which.max(abs(SalePredict - test$ElantraSales)),c('Month','Year')]
