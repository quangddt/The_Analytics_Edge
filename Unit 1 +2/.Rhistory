rbind(1,1:22)
rbind(2*2,1:22)
a <- c(1,2,3)
a
rbind(a,c(4,5,6))
quang <- rbind(a,c(4,5,6))
View(quang)
quang$V1
colnames(quang)
colnames(quang) = c('q','d','e')
quang
quang$q
quang.q
quang['q']
quang
colnames(quang)
quang["q"]
quang[1]
quang[,"q"]
quang[,"d"]
quang[,"e"]
quang["e"]
quang[1,"e"]
quang[,"e"]
quang[,c("e")]
quang[,c("e",'q')]
ta <- quang[,c('e','q')]
ta <- quang[,'e']
ta
ta[1]
ta[2]
names(ta)
ta <- quang[,c('e')]
ta
ta <- quang[,c('e','q')]
quang[0]
quang[1]
quang[2]
quang
quang[3]
View(quang)
quang$q
quang['d']
quang['e']
quang[c('e','d')]
mpg
ggplot(data = mpg, aes(x = displ, y = hwy, colour = class)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, color = class)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, size = cyl)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, size = factor(cyl))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(cyl))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, size = factor(cyl))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, shape = factor(cyl))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, alpha = factor(cyl))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, alpha = factor(class))) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, alpha = class)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, color = class)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy), color = 'red') + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy), color = "blue") + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, color = "blue")) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy, color = "red")) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(color = "blue")
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(color = "red")
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point(color = "green")
mpg
ggplot(mpg, aes(x=audi)) + geom_bar()
ggplot(mpg, aes(x=manufacturer)) + geom_bar()
ggplot(mpg, aes(x=manufacturer, fill = model)) + geom_bar()
install.packages("reshape2")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("plyr")
install.packages("devtools")
g <- ggplot(mpg, aes(x = manufacturer))
g <- ggplot2(mpg, aes(x = manufacturer))
library(ggplot2)
g <- ggplot(mpg, aes(x = manufacturer))
g
g + geom_bar(aes(fill=class)) + coord_map()
mpg
g + geom_bar(aes(fill=model)) + coord_map()
g + geom_bar(aes(fill=model))
g + geom_bar(aes(fill=model)) + coord_flip()
g + geom_bar(aes(fill=model)) + coord_flip() + scale_color_brewer()
g + geom_bar(aes(fill=model)) + coord_flip() + scale_color_gradient2()
g + geom_bar(aes(fill=model), position = 'dodge') + coord_flip() + scale_color_gradient2()
library(readxl)
library(dplyr)
install.packages("dplyr")
install.packages("readxl")
library(readxl)
library(dplyr)
treemap
treemap()
WHO <- read.csv("~/OneDrive/Documents/Data Science/Courses/The Analytics Edge/WHO.csv", header=FALSE)
View(WHO)
WHO <- read.csv("~/OneDrive/Documents/Data Science/Courses/The Analytics Edge/WHO.csv")
View(WHO)
summarise(WHO)
info(WHO)
summary(WHO)
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point()
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(fill = Resion)
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(fill = Region)
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(fill = Region))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(color = Region))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(color = Country))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = Country))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = Region))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = GNI))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = WHO$PrimarySchoolEnrollmentMale + WHO$PrimarySchoolEnrollmentFemale))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate), color = "blue") + geom_point(aes(size = WHO$PrimarySchoolEnrollmentMale + WHO$PrimarySchoolEnrollmentFemale))
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = WHO$PrimarySchoolEnrollmentMale + WHO$PrimarySchoolEnrollmentFemale), color = 'green')
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = WHO$PrimarySchoolEnrollmentMale + WHO$PrimarySchoolEnrollmentFemale), color = 'blue')
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = Population), color = 'blue')
ggplot(WHO, aes(x = WHO$CellularSubscribers, y=WHO$LiteracyRate)) + geom_point(aes(size = WHO$LifeExpectancy), color = 'blue')
ggplot(WHO, aes(Country, Population)) + geom_text()
ggplot(WHO, aes(label = Population)) + geom_text()
ggplot(WHO, aes(Country, Population)) + geom_bar()
ggplot(WHO, aes(Region, Population)) + geom_bar()
ggplot(WHO, aes(x = Region)) + geom_bar(fill = Population)
ggplot(WHO, aes(x = Region)) + geom_bar()
ggplot(WHO, aes(x = Region)) + geom_bar(aes(y=Population))
ggplot(WHO, aes(x = Region)) + stat_count(Population)
ggplot(WHO, aes(Region, Population)) + geom_col()
ggplot(WHO, aes(Region, Country)) + geom_col()
ggplot(WHO, aes(Region, Country)) + geom_col()
.libPaths()
version
packageStatus()
update.packages(checkBuilt=TRUE)
y
y
packageStatus()
install.packages('tidyverse')
library('tidyverse')
mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = mpg$displ, y = mpg$hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = mpg$displ, y = mpg$hwy, color = mpg$class))
usda <- read.csv('USDA.csv')
setwd("~/OneDrive/Documents/Data Science/Courses/The Analytics Edge")
usda <- read.csv('USDA.csv')
View(usda)
str(usda)
library(ggplot2)
ggplot(data = usda) + geom_point(Calories, Protein)
ggplot(data = usda) + geom_point(Calories, Protein)
ggplot(data = usda) + geom_point(x = Calories, y = usda$Protein)
ggplot(data = usda) + geom_point(x = usda$Calories, y = usda$Protein)
View(usda)
ggplot(data = usda) + geom_point(x = usda$Calories, y = usda$Protein)
ggplot(data = usda) + geom_histogram(x = usda$Calories)
ggplot(data = usda) + geom_histogram(aes(Calories))
ggplot(data = usda) + geom_point(aes(x = usda$Calories, y = usda$Protein))
ggplot(data = usda) + geom_point(aes(x = usda$Sugar, y = usda$Calories))
ggplot(data = usda) + geom_point(aes(x = usda$TotalFat, y = usda$Cholesterol))
ggplot(data = usda) + geom_point(aes(x = usda$Calcium, y = usda$Iron))
ggplot(data = usda) + geom_point(aes(x = usda$VitaminXC, y=usda$VitaminD))
ggplot(data = usda) + geom_point(aes(x = usda$VitaminC, y=usda$VitaminD))
summary(usada)
summary(usda)
usda$Description[which.max(usda$Sodium)]
names(usda)
names(usda)
usda$Description[which.max(usda$Sodium)]
HighSodium <- subset(usda, Sodium>10000)
nrow(HighSodium)
HighSodium
match('CAVIAR', usda$Description)
usda$Sodium[4154]
usda$Sodium[match('CAVIAR', usda$Description)]
summary(usda$Sodium)
sd(usda$Sodium, na.rm = TRUE)
plot(usda$Protein, usda$TotalFat)
plot(usda$Protein, usda$TotalFat, xlab = 'Protein', ylab = 'Total Fat')
plot(usda$Protein, usda$TotalFat, xlab = 'Protein', ylab = 'Fat', main = 'Protein vs Fat')
plot(usda$Protein, usda$TotalFat, xlab = 'Protein', ylab = 'Fat', main = 'Protein vs Fat', col = 'r')
plot(usda$Protein, usda$TotalFat, xlab = 'Protein', ylab = 'Fat', main = 'Protein vs Fat', col = 'red')
hist(usda$VitaminC)
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels')
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', breaks = 10)
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', xlim = [0, 500])
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', xlim = c(0, 100))
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', xlim = c(0, 100), breaks = 20)
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', xlim = c(0, 100), breaks = 200)
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', xlim = c(0, 100), breaks = 100)
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', xlim = c(0, 100), breaks = 1000)
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', xlim = c(0, 100), breaks = 500)
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', xlim = c(0, 100), breaks = 100)
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', xlim = c(0, 100), breaks = 1000)
hist(usda$VitaminC, xlab = 'Vitamin C', main = 'Histogram of Vitamin C Levels', xlim = c(0, 100), breaks = 2000)
boxplot(usda$Sugar)
boxplot(usda$Sugar, main = 'Boxplot of Sugar Levels', ylab = 'Sugar (g)')
usda$Sodium > mean(usda$Sodium, na.rm = TRUE)
usda$Sodium[1] > mean(usda$Sodium, na.rm = TRUE)
usda$Sodium[50] > mean(usda$Sodium, na.rm = TRUE)
HighSodium = usda > mean(usda$Sodium, na.rm = TRUE)
str(HighSodium)
HighSodium = usda$Sodium > mean(usda$Sodium, na.rm = TRUE)
str(HighSodium)
HighSodium = as.numeric(usda$Sodium > mean(usda$Sodium, na.rm = TRUE))
str(HighSodium)
usda$HighSodium <- as.numeric(usda$Sodium > mean(usda$Sodium, na.rm = TRUE))
str(usda)
usda$HighProtein <- as.numeric(usda$Protein > mean(usda$Protein, na.rm = TRUE))
usda$HighFat <- as.numeric(usda$Fat > mean(usda$Fat, na.rm = TRUE))
usda$HighCarbs <- as.numeric(usda$Carbs > mean(usda$Carbs, na.rm = TRUE))
usda$HighProtein <- as.numeric(usda$Protein > mean(usda$Protein, na.rm = TRUE))
usda$HighFat <- as.numeric(usda$Fat > mean(usda$Fat, na.rm = TRUE))
usda$HighProtein <- as.numeric(usda$Protein > mean(usda$Protein, na.rm = TRUE))
usda$HighFat <- as.numeric(usda$TotalFat > mean(usda$OtalFat, na.rm = TRUE))
usda$HighCarbs <- as.numeric(usda$Carbohydrate > mean(usda$Carbohydrate, na.rm = TRUE))
usda$HighFat <- as.numeric(usda$TotalFat > mean(usda$TotalFat, na.rm = TRUE))
usda$HighCarbs <- as.numeric(usda$Carbohydrate > mean(usda$Carbohydrate, na.rm = TRUE))
str(usda)
sum(HighCarbs)
sum(usda$HighCarbs)
sum(usda$HighFat)
usda$HighFat
type(usda$HighFat)
sum(usda$HighFat)
sum(c(1,2,3,4))
a <- c(1,2,3,4)
str(a)
str(usda$HighCarbs)
str(usda$HighFat)
a <- usda$HighFat
sum(a)
sum(a ,na.rm = TRUE)
mean(usda$Carbohydrate)
mean(usda$Carbohydrate, na.rm = TRUE)
str(usda)
table(usda$HighSodium)
4884+2090
table(usda$HighSodium, usda$HighFat)
tapply(usda$Iron, usda$HighProtein, mean, na.rm = TRUE)
tapply(usda$Iron, usda$HighProtein, count, na.rm = TRUE)
tapply(usda$Iron, usda$HighProtein, mean, na.rm = TRUE)
tapply(usda$VitaminC, usda$HighCarbs, max, na.rm = TRUE)
tapply(usda$VitaminC, usda$HighCarbs, summary, na.rm = TRUE)
ggplot(data = usda) + geom_boxplot(aes(usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(usda$HighCarbs, usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(factor(usda$HighCarbs), usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(factor(usda$HighCarbs, na.rm = TRUE), usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(factor(usda$HighCarbs), usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(factor(usda$HighCarbs, na.rm = TRUE), usda$VitaminC))
factor(usda$HighCarbs)
ggplot(data = usda) + geom_boxplot(aes(factor(usda$HighCarbs), usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(usda$HighCarbs, usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(x = usda$HighCarbs, y = $VitaminC))
usda$HighCarbs
ggplot(data = usda) + geom_boxplot(aes(x = usda$HighCarbs, y = usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(x = usda$HighCarbs, y = usda$VitaminC))
boxplot(usda$VitaminC, usda$HighCarbs)
ggplot(data = usda) + geom_boxplot(aes(x = usda$HighCarbs, y = usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(x = factor(usda$HighCarbs), y = usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(x = factor(usda$HighCarbs), y = usda$VitaminC), na.rm = TRUE)
ggplot(data = usda) + geom_boxplot(aes(x = factor(usda$HighCarbs, na.omit()), y = usda$VitaminC), na)
factor(usda$HighCarbs)
a <- c(1,0,0,1,NA)
a
factor(a)
factor(a, exclude = NA)
factor(a, levels = c(0,1))
factor(a, levels = c('0','1'))
?factor
factor(a, ifany = TRUE)
ggplot(data = na.omit(usda)) + geom_boxplot(aes(x = factor(usda$HighCarbs), y = usda$VitaminC))
ggplot(data = na.omit(usda, c('HighCarbs','VitaminC'))) + geom_boxplot(aes(x = factor(usda$HighCarbs), y = usda$VitaminC))
ggplot(data = usda) + geom_boxplot(aes(x = factor(usda$HighCarbs), y = usda$VitaminC))
ggplot(data = na.omit(data[,c('HighCarbs','VitaminC')])) + geom_boxplot(aes(x = factor(usda$HighCarbs), y = usda$VitaminC))
ggplot(data = na.omit(usda[,c('HighCarbs','VitaminC')])) + geom_boxplot(aes(x = factor(usda$HighCarbs), y = usda$VitaminC))
ggplot(data = na.omit(usda[,c('HighCarbs','VitaminC')])) + geom_boxplot(aes(x = factor(HighCarbs), y = VitaminC))
install.packages('sjPlot')
poll <- read.csv('AnonymityPoll.csv')
table(poll$Internet.Use, poll$Smartphone)
str(poll)
table(poll$Internet.Use, poll$Smartphone, useNA = TRUE)
?table
table(poll$Internet.Use, poll$Smartphone, useNA = 'always')
186+17+23+285+470+20+1
summary(poll)
limited <- subset(poll, poll$Internet.Use == 1 | poll$Smartphone == 1)
summary(limited)
table(limited$Info.On.Internet)
table(limited$Worry.About.Info)
prop.table(table(limited$Worry.About.Info))
prop.table(table(limited$Privacy.Importance))
prop.table(table(limited$Anonymity.Possible))
prop.table(table(limited$Tried.Masking.Identity))
prop.table(table(limited$Privacy.Laws.Effective))
ggplot(poll) + geom_histogram(aes(Age))
ggplot(poll) + geom_histogram(aes(Age), binwidth = 10)
ggplot(poll) + geom_histogram(aes(Age), binwidth = 20)
ggplot(poll) + geom_histogram(aes(Age), binwidth = 30)
ggplot(poll) + geom_histogram(aes(Age), binwidth = 5)
ggplot(poll) + geom_histogram(aes(Age), binwidth = 10)
ggplot(poll) + geom_histogram(aes(Age), binwidth = 15)
ggplot(poll) + geom_point(aes(poll$Info.On.Internet, poll$Age))
ggplot(poll) + geom_point(aes(poll$Info.On.Internet, poll$Age), dodge = 'jitter')
ggplot(poll) + geom_count(aes(poll$Info.On.Internet, poll$Age))
table(limited$Info.On.Internet, limited$Age)
max(table(limited$Info.On.Internet, limited$Age))
?max
jitter(c(1, 2, 3))
ggplot(poll) + geom_point(aes(poll$Info.On.Internet, poll$Age), position  = 'jitter')
plot(jitter(limited$Age), jitter(limited$Info.On.Internet))
ggplot(poll) + geom_point(aes(poll$Info.On.Internet, poll$Age), position  = 'jitter')
tapply(poll$Info.On.Internet, poll$Smartphone, mean)
tapply(poll$Info.On.Internet, poll$Smartphone)
tapply(poll$Info.On.Internet, poll$Smartphone, mean , na.rm = TRUE)
tapply(poll$Tried.Masking.Identity, poll$Smartphone, mean , na.rm = TRUE)
tapply(poll$Tried.Masking.Identity, poll$Smartphone, table)
table(limited$Tried.Masking.Identity, limited$Smartphone)
ggplot(limited) + geom_boxplot(aes(limited$Smartphone, limited$Info.On.Internet))
ggplot(limited) + geom_boxplot(aes(x=factor(limited$Smartphone), limited$Info.On.Internet))
ggplot(limited) + geom_boxplot(aes(x=factor(limited$Smartphone), limited$Info.On.Internet), na.rm = TRUE)
ggplot(limited) + geom_boxplot(aes(x=factor(limited$Smartphone), limited$Info.On.Internet))
summary(limited)
ggplot(limited) + geom_jitter(aes(Age,Info.On.Internet))
ggplot(limited) + geom_jitter(aes(Age,Info.On.Internet, color = 'Smartphone'))
ggplot(limited) + geom_jitter(aes(Age,Info.On.Internet, color = Smartphone))
ggplot(limited) + geom_jitter(aes(Age,Info.On.Internet, color = factor(Smartphone)))
ggplot(limited) + geom_jitter(aes(Age,Info.On.Internet, color = factor(Smartphone)), na.rm = TRUE)
rm_na <- na.omit(limited)
summary(rm_na)
?na.omit
View(limited)
rm_na2 <- limited[complete.cases(limited[,2])]
rm_na2 <- limited[complete.cases(limited[,'Smartphone'])]
rm_na2 <- limited[complete.cases(limited[,2]),]
rm_na2 <- limited[complete.cases(limited[,'Smartphone']),]
summary(rm_na2)
ggplot(rm_na2) + geom_jitter(aes(Age,Info.On.Internet, color = factor(Smartphone)), na.rm = TRUE)
ggplot(rm_na2) + geom_jitter(aes(Age,Info.On.Internet, color = Smartphone), na.rm = TRUE)
ggplot(rm_na2) + geom_jitter(aes(Age,Info.On.Internet, color = factor(Smartphone)), na.rm = TRUE)
1-18/27
16*2+4
1-18/36
16+4*2
1-18/24
wine <- read.csv('wine.csv')
str(wine)
summary(wine)
ggplot(wine) + geom_point(aes(AGST,ln(Price)))
ggplot(wine) + geom_point(aes(AGST,log(Price)))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = HarvestRain > 130))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = HarvestRain > 10))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = HarvestRain > 148.6))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = HarvestRain > 100))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = HarvestRain > 120))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = HarvestRain > 130))
ggplot(wine) + geom_point(aes(AGST,log(Price), size = Age))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = Age > 17))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = Age > 23))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = WinterRain > 697))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = WinterRain > 200))
ggplot(wine) + geom_point(aes(AGST,log(Price), color = WinterRain > 500))
model1 <- lm(Price ~ AGST, data=wine)
model1
summary(model1)
model1$residuals
SSE = sum(model1$residuals^2)
SSE
5.734875/25
sqrt(0.229395)
sqrt(sum(model1$residuals^2)/(23))
sqrt(sum(model1$residuals^2)/(24))
sqrt(sum(model1$residuals^2)/(23))
model1 <- lm(wine ~ AGST + HarvestRain, data=wine)
model1 <- lm(Price ~ AGST + HarvestRain, data=wine)
model1 <- lm(Price ~ AGST, data=wine)
model2 <- lm(Price ~ AGST + HarvestRain, data=wine)
summary(model2)
SSE = sum(model$residual^2)
SSE = sum(model2$residual^2)
SSE
model3 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age + FrancePop, data=wine)
summary(model3)
SSE = sum(model3$residuals^2)
SSE
model4 <- lm(Price ~ HarvestRain + WinterRain, data=wine)
model4
summary(model4)
model4 <- lm(Price ~ AGST + HarvestRain + WinterRain + Age, data=wine)
summary(model4)
summary(model3)
summary(model4)
attach(wine)
ggplot(wine) + geom_point(aes(FrancePop, Age))
model5 <- lm(Price ~ AGST + HarvestRain + WinterRain + FrancePop, data = wine)
summary(model5)
cor(wine$WinterRain, wine$Price)
cor(wine$Age, wine$FrancePop)
cor(wine$)
cor(wine)
cor_mat <- cor(wine)
View(cor_mat)
install.packages('corrplot')
corrplot(cor(wine), order="hclust", addrect=2, col=col1(100))
library(corrplot)
corrplot(cor(wine), order="hclust", addrect=2, col=col1(100))
col1 <- colorRampPalette(c("#7F0000","red","#FF7F00","yellow","white",
"cyan", "#007FFF", "blue","#00007F"))
corrplot(cor(wine), order="hclust", addrect=2, col=col1(100))
corrplot(cor(wine), order="hclust", addrect=2, col=col1(100), type = 'lower')
corrplot(cor(wine), order="hclust", addrect=2, col=col1(100), type = 'lower', method = 'color')
corrplot(cor(wine), order="hclust", addrect=1, col=col1(100), type = 'lower', method = 'color')
corrplot(cor(wine), order="hclust", addrect=4, col=col1(100), type = 'lower', method = 'color')
corrplot(cor(wine), order="hclust", addrect=5, col=col1(100), type = 'lower', method = 'color')
corrplot(cor(wine), order="hclust", addrect=10, col=col1(100), type = 'lower', method = 'color')
corrplot(cor(wine), order="hclust", col=col1(100), type = 'lower', method = 'color')
col1
rev(col1)
rev(col1(100))
corrplot(cor(wine), order="hclust", col=rev(col1(100)), type = 'lower', method = 'color')
summary(model4)
model4
model5
model3
model5 <- lm(Price ~ AGST + HarvestRain + WinterRain)
summary(model5)
summary(model4)
wineTest <- read.csv('wine_test.csv')
str(wineTest)
predictTest <- predict(model4, newdata = wineTest)
predictTest
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum(wineTest$Price - mean(wineTest$Price)^2)
1 - SSE/SST
SST = sum((wineTest$Price - mean(wineTest$Price))^2)
1 - SSE/SST
SSE = sum((wineTest$Price - predictTest)^2)
SST = sum((wineTest$Price - mean(wineTest$Price))^2)
1 - SSE/SST
SST = sum((wineTest$Price - mean(wine$Price))^2)
1 - SSE/SST
?corrplot
baseball <- read.csv('baseball.csv')
baseball <- read.csv('baseball.csv')
str(baseball)
moneyball <- subset(baseball, Year < 2002)
attach(baseball )
attach(baseball)
str(moneyball)
moneyball$RD <- moneyball$RS - moneyball$RA
str(moneyball)
View(moneyball)
plot(RD, W)
plot(moneyball$RD, moneyball$W)
WinsReg <- lm(W ~ RD, data=moneyball)
summary(WinsReg)
713-614
predict(WinsReg, 713-614)
?predict
predict(WinsReg, c(713-614))
predict(WinsReg)
predict(WinsReg, 12)
news = data.frame(c(12))
news
colnames(news)
colnames(news)=RD
colnames(news)='RD'
news
predict(WinsReg, news)
predict(WinsReg, news)
news
news[1]
news[1]=713-614
news
predict(WinsReg, news)
data.frame(c(1,2,3,4), names=c('quang'))
data.frame(c(1), names=c('quang'))
?data.frame
data.frame(c(1), row.names =c('quang'))
data.frame(1)
data.frame(1,2,3,4)
data.frame(c(1,2,3,4))
n = c(2, 3, 5)
s = c("aa", "bb", "cc")
b = c(TRUE, FALSE, TRUE)
df = data.frame(n, s, b)
df
RD = 713-614
df = data.frame(RD)
df
baseball <- read.csv('baseball.csv')
moneyball <- subset(baseball, Year < 2002)
moneyball$RD <- moneyball$RS - moneyball$RA
str(moneyball)
attach(moneyball)
RunsReg <- lm(RS ~ OBP + SLG + BA, data=moneyball)
summary(RunsReg)
RunsReg <- lm(RS ~ OBP + SLG, data=moneyball)
summary(RunsReg)
OBP=0.311
SLG=0.405
new = data.frame(OBP,SLG)
new
predict(RunsReg, new)
RunsAllowReg <- lm(RA ~ OOBP + OSLG, data=moneyball)
OOBP = 0.297
OSLG = 0.370
new = data.frame(OOBP, OSLG)
predict(RunsAllowReg, new)
teamRank = c(1,2,3,3,4,4,4,4,5,5)
wins2012 <- c(94,88,95,88,93,94,98,97,93,94)
wins2013 <- c(97,97,92,93,92,96,94,96,92,90)
cor(teamRank, wins2012)
cor(teamRank, wins2013)
12+24
